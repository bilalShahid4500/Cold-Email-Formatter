const t=r=>{if(r.emailType==="gmail")return{host:"smtp.gmail.com",port:587,secure:!1,auth:{user:r.from,pass:r.password}};{if(!r.domain)throw new Error("SMTP domain is required for website emails");if(!r.smtpPort)throw new Error("SMTP port is required for website emails");const s=parseInt(r.smtpPort);if(isNaN(s)||s<1||s>65535)throw new Error("Invalid SMTP port number");const e=s===465;return{host:r.domain,port:s,secure:e,auth:{user:r.from,pass:r.password}}}},c=async r=>{try{if(!r.from||!r.password||!r.to||!r.subject||!r.content)throw new Error("Missing required email fields");const s=t(r),e=await fetch("/api/send-email",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({emailConfig:s,emailData:{emailType:r.emailType,from:r.from,password:r.password,to:r.to,cc:r.cc,subject:r.subject,content:r.content,domain:r.domain,smtpPort:r.smtpPort}})});if(!e.ok){let o="Failed to send email";try{o=(await e.json()).error||o}catch{o=e.statusText||o}throw new Error(o)}try{await e.json()}catch{throw new Error("Invalid response from server")}return{success:!0,message:"Email sent successfully!"}}catch(s){return console.error("Email sending error:",s),s instanceof TypeError&&s.message.includes("fetch")?{success:!1,message:"Backend server is not running. Please start the server with: npm run dev:server"}:{success:!1,message:s instanceof Error?s.message:"Failed to send email"}}},i=async()=>{try{throw new Error("EmailJS not configured. Please set up EmailJS or use a backend server.")}catch(r){return console.error("EmailJS error:",r),{success:!1,message:r instanceof Error?r.message:"Failed to send email"}}};export{c as sendEmail,i as sendEmailWithEmailJS};
